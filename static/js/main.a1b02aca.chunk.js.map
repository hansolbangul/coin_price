{"version":3,"sources":["components/Header.js","components/Footer.js","components/Chart.js","components/Coin_Chart.js","route/Main.js","App.js","index.js"],"names":["headerStyle","position","top","left","right","width","backgroundColor","marginBottom","zIndex","textAlign","Header","style","color","footerStyle","bottom","marginTop","Footer","Test","isCandle","useState","coinCandle","setCoinCandle","useEffect","console","log","reduce","result","item","data","x","timestamp","y","opening_price","high_price","low_price","trade_price","Chart","candle","options","plotOptions","toolbar","show","tools","download","chart","type","height","title","text","align","xaxis","yaxis","tooltip","enabled","url","setIsCandle","callUrl","a","axios","get","CandleUrl","className","series","tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","comma","number","toString","replace","removeComma","str","parseInt","removePs","temp","split","parseFloat","coin_state","tableCoin","setTableCoin","krw_name","korean_name","market","price","chage_price","signed_change_rate","toFixed","signed_change_price","acc_trade_price_24h","highest_52_week_price","lowest_52_week_price","highest_52_week_date","lowest_52_week_date","trade_date","Coin_Chart","icons","columns","field","customSort","b","map","e","paging","sorting","localization","searchPlaceholder","detailPanel","rowData","onRowClick","event","togglePanel","Swap","name","coin_price","setCoin_Price","includes","value_price","Swap_undefined","coin_section","setCoin_Section","filter","undefined","Korean_name","coin","loading","setLoading","setKrw_name","some","el","Arrchange","setCoin_State","_a","foundB","find","_b","Main","setname","loading1","setLoading1","error1","setError1","useFetch","setCoin","loading2","setLoading2","error2","setError2","useEdit","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a1b02aca.chunk.js","sourcesContent":["const Header = () => (\n    <header style={headerStyle}>\n        <h1 style={{ color: '#f9f7f7' }}>코인 시세 정보</h1>\n    </header>\n);\n\nconst headerStyle = {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    right: 0,\n    width: '100%',\n    backgroundColor: '#3f72af',\n    marginBottom: 20,\n    zIndex: 100,\n    textAlign: 'center',\n};\n\nexport default Header;\n","const Footer = () => (\n    <footer style={footerStyle}>\n      <h4 style={{color: '393e46'}}>Copyright© 2021.Hansol.All rights reserved</h4>\n    </footer>\n)\n\nconst footerStyle = {\n  position: 'fixed',\n  bottom:0,\n  left: 0,\n  right: 0,\n  width: '100%',\n  backgroundColor: '#f6f6f6',\n  marginTop: 20,\n  zIndex: 100,\n  textAlign: 'center'\n}\n\nexport default Footer;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Line } from 'react-chartjs-2';\nimport ReactApexChart from 'react-apexcharts';\n\nfunction CandleUrl(url) {\n    // 1번째 api 호출하기.\n    const [isCandle, setIsCandle] = useState(null);\n\n    // 비동기 처리하기.\n    const callUrl = async () => {\n        try {\n            const { data } = await axios.get(url);\n            setIsCandle(data);\n        } finally {\n            // setLoading1(false);\n        }\n    };\n\n    useEffect(() => {\n        callUrl();\n    }, []);\n\n    return { isCandle };\n}\n\nconst Test = (isCandle) => {\n    // if(isCandle){\n    //     console.log(isCandle);\n    // }\n    const [coinCandle, setCoinCandle] = useState(null);\n\n    const personValue = () => {\n        if (isCandle) {\n            console.log(isCandle);\n            setCoinCandle(\n                isCandle.reduce(\n                    (result, item) => [\n                        ...result,\n                        {\n                            data: [\n                                {\n                                    x: item.timestamp,\n                                    y: [\n                                        item.opening_price,\n                                        item.high_price,\n                                        item.low_price,\n                                        item.trade_price,\n                                    ],\n                                },\n                            ],\n                        },\n                    ],\n                    []\n                )\n            );\n        }\n    };\n\n    useEffect(() => {\n        personValue();\n    }, [isCandle]);\n\n    return { coinCandle };\n};\n\nconst Chart = ({ candle }) => {\n    const [options, setOptions] = useState({\n        options: {\n            plotOptions: {\n                toolbar: {\n                    show: true,\n                    tools: {\n                        download: false,\n                    },\n                },\n            },\n            chart: {\n                type: 'candlestick',\n                height: 100,\n            },\n            title: {\n                text: '30분 봉 30개',\n                align: 'left',\n            },\n            xaxis: {\n                type: 'datetime',\n            },\n            yaxis: {\n                tooltip: {\n                    enabled: true,\n                },\n            },\n        },\n    });\n    console.log(options.options);\n\n    const { isCandle } = CandleUrl(\n        `https://api.upbit.com/v1/candles/minutes/30?market=${candle}&count=30`\n    );\n    // console.log(isCandle);\n    const { coinCandle } = Test(isCandle);\n\n    // const { candleMinutes } = ArrayAdd(coinCandle)\n\n    // if (coinCandle) {\n    //     console.log(coinCandle);\n    // }\n    // console.log(coinCandle);\n\n    // console.log(`https://api.upbit.com/v1/candles/minutes/30?market=${candle}&count=10`);\n\n    return (\n        <div>\n            {coinCandle ? (\n                <div className=\"chart\">\n                    <ReactApexChart\n                        options={options.options}\n                        series={coinCandle}\n                        type=\"candlestick\"\n                        height={350}\n                    />\n                </div>\n            ) : (\n                <h2>Loding</h2>\n            )}\n        </div>\n    );\n};\n\nexport default Chart;\n","import React, { useState, useEffect, forwardRef } from 'react';\nimport './Coin_Chart.css';\nimport MaterialTable from 'material-table';\nimport Chart from './Chart';\nimport axios from 'axios';\n\n// material-Table icon 꺠짐 해결\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\n\n// material-Table icon 꺠짐 해결\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => (\n        <ChevronRight {...props} ref={ref} />\n    )),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => (\n        <ChevronLeft {...props} ref={ref} />\n    )),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => (\n        <ArrowDownward {...props} ref={ref} />\n    )),\n    ThirdStateCheck: forwardRef((props, ref) => (\n        <Remove {...props} ref={ref} />\n    )),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n};\n\nconst comma = (number) => {\n    // 가격에 , 붙이기.\n    return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n};\n\nconst removeComma = (str) => {\n    // 가격에서 , 제거\n    str.replace('원', '');\n    return parseInt(str.replace(/,/g, ''));\n};\n\nconst removePs = (str) => {\n    // 가격에서 %기준에서 나누기\n    var temp = str.split('%');\n    return parseFloat(temp[0]);\n};\n\nconst Test = ({ coin_state }) => {\n    const [temp, setTemp] = useState(coin_state);\n    // console.log(temp);\n    const [tableCoin, setTableCoin] = useState([]);\n\n    const personValue = () => {\n        setTableCoin(\n            temp.reduce(\n                (result, item) => [\n                    ...result,\n                    {\n                        krw_name: `${item.korean_name} (${\n                            item.market.split('-')[1]\n                        })`,\n                        price: `${comma(item.trade_price)}원`,\n                        chage_price: `${(item.signed_change_rate * 100).toFixed(\n                            2\n                        )}%  (${comma(item.signed_change_price)}원)`,\n                        acc_trade_price_24h: `${comma(\n                            item.acc_trade_price_24h.toFixed(0)\n                        )}원`,\n                        highest_52_week_price: `${comma(\n                            item.highest_52_week_price.toFixed(0)\n                        )}원`,\n                        lowest_52_week_price: `${comma(\n                            item.lowest_52_week_price.toFixed(0)\n                        )}원`,\n                        highest_52_week_date: item.highest_52_week_date,\n                        lowest_52_week_date: item.lowest_52_week_date,\n                        trade_date: item.trade_date.replace(\n                            /(\\d{4})(\\d{2})(\\d{2})/g,\n                            '$1-$2-$3'\n                        ),\n                        market: item.market,\n                        high_price: item.high_price,\n                        low_price: item.low_price,\n                    },\n                ],\n                []\n            )\n        );\n    };\n\n    useEffect(() => {\n        personValue();\n    }, [temp]);\n\n    return { tableCoin };\n};\n\nconst Coin_Chart = ({ coin_state }) => {\n    const [selectedRow, setSelectedRow] = useState(null);\n    // console.log(coin_state);\n    const { tableCoin } = Test({ coin_state });\n\n    // console.log(tableCoin);\n\n    return (\n        <div className=\"App\">\n            {/* <h1>Demo</h1> */}\n            <div>\n                <MaterialTable\n                    icons={tableIcons}\n                    columns={[\n                        {\n                            title: '코인 명',\n                            field: 'krw_name',\n                        },\n                        {\n                            title: '가격',\n                            field: 'price',\n                            customSort: (a, b) =>\n                                removeComma(a.price) - removeComma(b.price),\n                        },\n                        {\n                            title: '변화율',\n                            field: 'chage_price',\n                            customSort: (a, b) =>\n                                removePs(a.chage_price) -\n                                removePs(b.chage_price),\n                        },\n                        {\n                            title: '24시간 거래대금',\n                            field: 'acc_trade_price_24h',\n                            customSort: (a, b) =>\n                                removeComma(a.acc_trade_price_24h) -\n                                removeComma(b.acc_trade_price_24h),\n                        },\n                    ]}\n                    data={tableCoin.map((e) => e)} // 되는 코드\n                    title=\"upbit_coin_price\"\n                    //   onRowClick={((evt, selectedRow) => setSelectedRow(selectedRow.tableData.id))} // 클릭 -> 색 변경\n\n                    options={{\n                        // rowStyle: rowData => ({\n                        //     backgroundColor: (selectedRow === rowData.tableData.id) ? '#EEE' : '#FFF'}), // 클릭 -> 색 변경\n                        paging: false,\n                        sorting: true,\n                        headerStyle: {\n                            position: 'sticky',\n                            top: 0,\n                        },\n                        // maxBodyHeight: window.innerHeight - 265 테이블 스크롤로 묶기\n                    }}\n                    localization={{ toolbar: { searchPlaceholder: '코인 명' } }}\n                    detailPanel={(rowData) => {\n                        // 디테일 판낼 만들기.\n                        return (\n                            <div className=\"chart\">\n                                <h3> 현재가: {rowData.price}</h3>\n                                <h3>\n                                    {' '}\n                                    오늘 최고가: {comma(rowData.high_price)}원\n                                </h3>\n                                <h3>\n                                    {' '}\n                                    오늘 최저가: {comma(rowData.low_price)}원\n                                </h3>\n                                <Chart candle={rowData.market} />\n                            </div>\n                        );\n                    }}\n                    onRowClick={(event, rowData, togglePanel) => togglePanel()}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default Coin_Chart;\n","import { useEffect, useState } from 'react';\nimport axios from 'axios';\n// import { Link } from \"react-router-dom\";\nimport Coin_Chart from '../components/Coin_Chart';\n\nfunction useFetch(url) {\n    // 1번째 api 호출하기.\n    const [name, setname] = useState(null);\n    const [loading1, setLoading1] = useState(null);\n    const [error1, setError1] = useState('');\n\n    // 비동기 처리하기.\n    const callUrl = async () => {\n        try {\n            const { data } = await axios.get(url);\n            setname(data);\n        } catch {\n            setError1('😭');\n        } finally {\n            setLoading1(false);\n        }\n    };\n\n    useEffect(() => {\n        callUrl();\n    }, []);\n\n    return { name, loading1, error1 };\n}\n\nfunction Swap(name) {\n    // 1번째 api에서 KRW(원화마켓)만 추리기\n    const [coin_price, setCoin_Price] = useState([]);\n    const value_price = () => {\n        if (name) {\n            setCoin_Price(\n                name.map((e) => {\n                    if (e.market.includes('KRW') == true) {\n                        return e.market;\n                    } else {\n                        return;\n                    }\n                })\n            );\n            return coin_price;\n        }\n    };\n\n    useEffect(() => {\n        value_price();\n    }, [name]);\n\n    return { coin_price };\n}\n\nfunction Swap_undefined(name) {\n    // 원화마켓만 추린것에서 undefined 제거하기.\n    const [coin_section, setCoin_Section] = useState([]);\n    const value_price = () => {\n        if (name) {\n            setCoin_Section(\n                name.filter((item) => {\n                    return item !== null && item !== undefined && item !== '';\n                })\n            );\n        }\n    };\n\n    useEffect(() => {\n        value_price();\n    }, [name]);\n    // http+coin_section.map((e) => e) 로 문장을 만들 수 있음\n    return { coin_section };\n}\n\nfunction useEdit(url) {\n    // 2번째 api 받아오기\n    // console.log(url);\n    const [coin, setCoin] = useState(null);\n    const [loading2, setLoading2] = useState(null);\n    const [error2, setError2] = useState('');\n\n    const callUrl = async () => {\n        try {\n            const { data } = await axios.get(url);\n            setCoin(data);\n            // console.log(data);\n        } catch {\n            setError2('😭');\n        } finally {\n            setLoading2(false);\n        }\n    };\n\n    useEffect(() => {\n        callUrl();\n    }, [url]);\n\n    return { coin, loading2, error2 };\n}\n\nfunction Korean_name(name, coin) {\n    // 원화 마켓의 영어이름, 한국이름을 뽑음.\n    const [loading, setLoading] = useState(null);\n    const [krw_name, setKrw_name] = useState();\n\n    const rename = () => {\n        if (coin) {\n            // name에는 KRW와 BTC, USDT등이 있음. 그렇기에 KRW만 남기기 위함.\n            // coin을 비교대상으로 두어 KRW만 뽑음.\n            // 코드분석이 필요함. reduce와 some에대해 더 공부할 것.\n            setKrw_name(\n                name.reduce(\n                    (result, item) =>\n                        coin.some((el) => el.market === item.market)\n                            ? [...result, item]\n                            : result,\n                    []\n                )\n            );\n        }\n        setLoading(true);\n    };\n\n    useEffect(() => {\n        rename();\n        // console.log(krw_name);\n    }, [coin]);\n\n    // console.log(krw_name);\n    return { krw_name, loading };\n}\n\nfunction Arrchange(krw_name, coin) {\n    // 원화이름이랑, price랑 합치기.\n    const [coin_state, setCoin_State] = useState();\n\n    const arr = () => {\n        if (krw_name) {\n            setCoin_State(\n                krw_name.map((_a) => {\n                    const foundB = coin.find((_b) => _a.market === _b.market);\n                    return foundB ? { ..._a, ...foundB } : _a;\n                })\n            );\n        }\n    };\n\n    useEffect(() => {\n        arr();\n    }, [krw_name]);\n\n    return { coin_state };\n}\n\nconst Main = () => {\n    // 1번째 api 받아오기 code: 93~100\n    const { name, loading1, error1 } = useFetch(\n        'https://api.upbit.com/v1/market/all'\n    );\n\n    // 1번째 api에서 KRW(원화마켓)만 추리기\n    const { coin_price } = Swap(name);\n\n    // 원화마켓만 추린것에서 undefined 제거하기.\n    const { coin_section } = Swap_undefined(coin_price);\n\n    // 2번째 api 받아오기 code: 102~107\n    const upbit_Link = 'https://api.upbit.com/v1/ticker?markets=';\n\n    // coin_section.map((e) => e)를 통해 받아온 api의 원화마켓명을 모두 붙인 후 받아오기.\n    const upbit_url = upbit_Link + coin_section.map((e) => e);\n    const { coin, loading2, error2 } = useEdit(upbit_url);\n\n    // 원화 마켓의 영어이름, 한국이름을 뽑음.\n    const { krw_name, loading } = Korean_name(name, coin);\n\n    // 원화 마켓의 영어이름, 한국이름인 krw_name 과 코인의 가격 및 정보를 갖고있는 coin을 market 기준으로 병합.\n    const { coin_state } = Arrchange(krw_name, coin);\n\n    // console.log(coin_state);\n    // if(krw_name) {\n    //     console.log(krw_name);\n    // } else {\n    //     console.log(\"happy\");\n    // }\n\n    return (\n        <div className=\"App\">\n            <h1>코인이 또...</h1>\n            {/* {loading1 && <span>loading1 your cat</span>}\n            {!loading1 && error1 && <span>{error1}</span>}\n            {!loading1 && name && <li>{name.map((e) => e.market)}</li>} */}\n            {/* <h1>{coin.map((e) => e.change)}</h1> */}\n            {/* {!loading2 && coin && coin.map((e) => <li>{e.market}{e.trade_price}</li>)} */}\n            {!coin_state ? (\n                <div className=\"Loading_div\">Loding</div>\n            ) : (\n                <div>\n                    <Coin_Chart coin_state={coin_state} />\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Main;\n","import { useEffect, useState } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\n// import axios from 'axios';\nimport Main from './route/Main';\nimport { HashRouter, Route } from 'react-router-dom';\n\nconst App = () => {\n    return (\n        <HashRouter>\n            <div>\n                <Header />\n                <div>\n                    <Route path=\"/\" exact={true} component={Main} />\n                </div>\n                <Footer />\n            </div>\n            {/* <Route path=\"/:market\" component={Coin_Info} /> */}\n        </HashRouter>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}