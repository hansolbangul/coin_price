{"version":3,"sources":["components/Chart.js","components/Coin_Chart.js","route/Main.js","App.js","index.js"],"names":["removeComma","str","replace","parseInt","options","scales","yAxes","ticks","beginAtZero","Chart","name","high","price","low","highdate","lowdate","data","labels","today","datasets","label","fill","backgroundColor","borderColor","tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","comma","number","toString","removePs","temp","split","parseFloat","Test","coin_state","useState","tableCoin","setTableCoin","useEffect","reduce","result","item","krw_name","korean_name","market","trade_price","chage_price","signed_change_rate","toFixed","signed_change_price","acc_trade_price_24h","highest_52_week_price","lowest_52_week_price","highest_52_week_date","lowest_52_week_date","trade_date","Coin_Chart","className","icons","columns","title","field","customSort","a","b","map","e","paging","sorting","localization","toolbar","searchPlaceholder","detailPanel","rowData","onRowClick","event","togglePanel","Swap","coin_price","setCoin_Price","includes","value_price","Swap_undefined","coin_section","setCoin_Section","filter","undefined","Korean_name","coin","loading","setLoading","setKrw_name","some","el","Arrchange","setCoin_State","_a","foundB","find","_b","Main","url","setname","loading1","setLoading1","error1","setError1","callUrl","axios","get","useFetch","setCoin","loading2","setLoading2","error2","setError2","useEdit","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8bb54d21.chunk.js","sourcesContent":["import React from 'react';\nimport { Line } from 'react-chartjs-2';\n\nconst removeComma = (str) => { // 가격에서 , 제거\n    str.replace(\"원\", \"\");\n\treturn parseInt(str.replace(/,/g,\"\"));\n}\n\n// const Test = ({coin_state}) => {\n//     const [temp, setTemp] = useState(coin_state);\n//     // console.log(temp);\n//     const [tableCoin, setTableCoin] = useState([]);\n\n//     const personValue = () => {\n//         setTableCoin(\n//             temp.reduce(\n//             (result, item) => [\n//               ...result,\n//               { \n//                 price: item.trade_price,\n//                 highest_52_week_price: item.highest_52_week_price,\n//                 lowest_52_week_price: item.lowest_52_week_price\n//               }\n//             ],\n//             []\n//           )\n//         );\n//       };\n\n//     useEffect(() => {\n//         personValue();\n//     }, [temp]);\n\n//     return { tableCoin }\n// }\n\n\n\nconst options = {\n  scales: {\n    yAxes: [\n      {\n        ticks: {\n          beginAtZero: true,\n        },\n      },\n    ],\n  },\n};\n\nconst Chart = ({name, high, price, low, highdate, lowdate, today}) => {\n    const data = {\n        labels: [highdate, today, lowdate],\n        datasets: [\n          {\n            label: `# ${name}`,\n            data: [removeComma(high), removeComma(price), removeComma(low)],\n            fill: false,\n            backgroundColor: 'rgb(255, 99, 132)',\n            borderColor: 'rgba(255, 99, 132, 0.2)',\n          },\n        ],\n      };\n\n    return(\n        <>\n    <Line data={data} options={options} />\n  </>\n    )\n  \n};\n\nexport default Chart;","import React, { useState, useEffect, forwardRef } from \"react\";\nimport \"./Coin_Chart.css\";\nimport MaterialTable from \"material-table\";\nimport Chart from \"./Chart\";\n\n// material-Table icon 꺠짐 해결\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\n\n\n// material-Table icon 꺠짐 해결\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n  };\n\n\n  const comma = (number) => { // 가격에 , 붙이기.\n    return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n}\n\nconst removeComma = (str) => { // 가격에서 , 제거\n    str.replace(\"원\", \"\");\n\treturn parseInt(str.replace(/,/g,\"\"));\n}\n\nconst removePs = (str) => { // 가격에서 %기준에서 나누기\n    var temp = str.split(\"%\");\n\treturn parseFloat(temp[0]);\n}\n\nconst Test = ({coin_state}) => {\n    const [temp, setTemp] = useState(coin_state);\n    // console.log(temp);\n    const [tableCoin, setTableCoin] = useState([]);\n\n    const personValue = () => {\n        setTableCoin(\n            temp.reduce(\n            (result, item) => [\n              ...result,\n              { \n                krw_name: `${item.korean_name} (${item.market.split(\"-\")[1]})`, \n                price: `${comma(item.trade_price)}원`, \n                chage_price: `${(item.signed_change_rate*100).toFixed(2)}%  (${comma(item.signed_change_price)}원)`, \n                acc_trade_price_24h: `${comma((item.acc_trade_price_24h).toFixed(0))}원`,\n                highest_52_week_price: `${comma((item.highest_52_week_price).toFixed(0))}원`,\n                lowest_52_week_price: `${comma((item.lowest_52_week_price).toFixed(0))}원`,\n                highest_52_week_date: item.highest_52_week_date,\n                lowest_52_week_date: item.lowest_52_week_date,\n                trade_date: (item.trade_date).replace(/(\\d{4})(\\d{2})(\\d{2})/g, '$1-$2-$3')\n              }\n            ],\n            []\n          )\n        );\n      };\n\n    useEffect(() => {\n        personValue();\n    }, [temp]);\n\n    return { tableCoin }\n}\n\nconst Coin_Chart = ( {coin_state} ) => {\n    const [selectedRow, setSelectedRow] = useState(null);\n    // console.log(coin_state);\n    const { tableCoin } = Test({ coin_state });\n    \n    // console.log(tableCoin);\n\n\n    return (\n        <div className=\"App\">\n      {/* <h1>Demo</h1> */}\n      <div>\n        <MaterialTable\n        icons={tableIcons}\n          columns={[\n            {\n              title: \"코인 명\",\n              field: \"krw_name\"\n            },\n            {\n              title: \"가격\",\n              field: \"price\",\n              customSort: (a, b) => removeComma(a.price) - removeComma(b.price)\n            },\n            {\n              title: \"변화율\",\n              field: \"chage_price\",\n              customSort: (a, b) => removePs(a.chage_price) - removePs(b.chage_price)\n            },\n            {\n              title: \"24시간 거래대금\",\n              field: \"acc_trade_price_24h\",\n              customSort: (a, b) => removeComma(a.acc_trade_price_24h) - removeComma(b.acc_trade_price_24h)\n            }\n          ]\n        }\n          data={tableCoin.map((e) => e)} // 되는 코드\n          title=\"upbit_coin_price\"\n        //   onRowClick={((evt, selectedRow) => setSelectedRow(selectedRow.tableData.id))} // 클릭 -> 색 변경\n          \n          options={{\n            // rowStyle: rowData => ({\n            //     backgroundColor: (selectedRow === rowData.tableData.id) ? '#EEE' : '#FFF'}), // 클릭 -> 색 변경\n            paging:false,\n            sorting:true\n          }}\n          localization={\n              { toolbar: { searchPlaceholder: '코인 명' } \n            }}\n            detailPanel={rowData => { // 디테일 판낼 만들기.\n                return (\n                    <div className=\"chart\">\n                        <h1> 오늘날짜: {rowData.trade_date}</h1>\n                        <Chart \n                        name={rowData.krw_name}\n                        high={rowData.highest_52_week_price} \n                        price={rowData.price} \n                        low={rowData.lowest_52_week_price}\n                        highdate={rowData.highest_52_week_date}\n                        lowdate={rowData.lowest_52_week_date}\n                        today={rowData.trade_date}\n                        />\n                    </div>\n                )\n              }}\n              onRowClick={(event, rowData, togglePanel) => togglePanel()}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Coin_Chart;","import { useEffect, useState } from 'react';\nimport axios from 'axios';\n// import { Link } from \"react-router-dom\";\nimport Coin_Chart from \"../components/Coin_Chart\";\n\n\nfunction useFetch(url) { // 1번째 api 호출하기.\n    const [name, setname] = useState(null);\n    const [loading1, setLoading1] = useState(null);\n    const [error1, setError1] = useState(\"\");\n    \n    // 비동기 처리하기.\n    const callUrl = async () => {\n        try {\n            const { data } = await axios.get(url);\n            setname(data);\n        } catch {\n            setError1(\"😭\");\n        } finally {\n            setLoading1(false);\n        }\n    };\n\n    useEffect(() => {\n        callUrl()\n    }, []);\n\n    return { name, loading1, error1 };\n}\n\nfunction Swap (name) { // 1번째 api에서 KRW(원화마켓)만 추리기\n    const [coin_price, setCoin_Price] = useState([]);\n    const value_price = (() => {\n        if (name) {\n            setCoin_Price(name.map((e) => {\n                if(e.market.includes(\"KRW\") == true ){ \n                    return e.market;\n                } else {\n                    return;\n                }\n            }));\n            return coin_price;\n        }\n    });\n\n    useEffect(() => {\n        value_price()\n    }, [name]);\n\n    return { coin_price };\n}\n\nfunction Swap_undefined (name) { // 원화마켓만 추린것에서 undefined 제거하기.\n    const [coin_section, setCoin_Section] = useState([]);\n    const value_price = (() => {\n        if (name) {\n            setCoin_Section(name.filter((item) => {\n                return item !== null && item !== undefined && item !== \"\";\n            }))\n        }\n    });\n\n    useEffect(() => {\n        value_price()\n    }, [name]);\n    // http+coin_section.map((e) => e) 로 문장을 만들 수 있음 \n    return { coin_section };\n}\n\nfunction useEdit(url) { // 2번째 api 받아오기\n    // console.log(url);\n    const [coin, setCoin] = useState(null);\n    const [loading2, setLoading2] = useState(null);\n    const [error2, setError2] = useState(\"\");\n\n    const callUrl = async () => {\n        try {\n            const { data } = await axios.get(url);\n            setCoin(data);\n            // console.log(data);\n        } catch {\n            setError2(\"😭\");\n        } finally {\n            setLoading2(false);\n        }\n    };\n\n    useEffect(() => {\n        callUrl()\n    }, [url]);\n\n    return { coin, loading2, error2 };\n}\n\n\n\nfunction Korean_name (name, coin) { // 원화 마켓의 영어이름, 한국이름을 뽑음.\n    const [loading, setLoading] = useState(null);\n    const [krw_name, setKrw_name] = useState();\n\n    const rename = () => {\n        if(coin){\n            // name에는 KRW와 BTC, USDT등이 있음. 그렇기에 KRW만 남기기 위함.\n            // coin을 비교대상으로 두어 KRW만 뽑음.\n            // 코드분석이 필요함. reduce와 some에대해 더 공부할 것.\n            setKrw_name(name.reduce(\n                (result, item) =>\n                coin.some(el => el.market === item.market)\n                ? \n                [...result, item]\n                : result,\n                []\n            ));\n        }\n        setLoading(true);\n    }\n\n    useEffect(() => {\n        rename();\n        // console.log(krw_name);\n    }, [coin]);\n    \n    // console.log(krw_name);\n    return { krw_name, loading}; \n} \n\nfunction Arrchange (krw_name, coin) { // 원화이름이랑, price랑 합치기.\n    const [ coin_state, setCoin_State ] = useState();\n    \n    const arr = () =>{\n        if (krw_name){\n            setCoin_State(krw_name.map(_a => {\n                const foundB = coin.find(_b => _a.market===_b.market)\n                return foundB ? {..._a,...foundB} : _a\n            }))\n        }\n    }\n    \n    useEffect(() => {\n        arr();\n    }, [krw_name])\n\n    return { coin_state };\n}\n\nconst Main = () => {\n    // 1번째 api 받아오기 code: 93~100\n    const { name, loading1, error1 } = useFetch(\"https://api.upbit.com/v1/market/all\");\n\n    // 1번째 api에서 KRW(원화마켓)만 추리기\n    const { coin_price } = Swap(name);\n\n    // 원화마켓만 추린것에서 undefined 제거하기.\n    const { coin_section } = Swap_undefined(coin_price);\n\n    // 2번째 api 받아오기 code: 102~107\n    const upbit_Link = \"https://api.upbit.com/v1/ticker?markets=\";\n\n    // coin_section.map((e) => e)를 통해 받아온 api의 원화마켓명을 모두 붙인 후 받아오기. \n    const upbit_url = upbit_Link+coin_section.map((e) => e);\n    const { coin, loading2, error2 } = useEdit(upbit_url);\n\n    // 원화 마켓의 영어이름, 한국이름을 뽑음.\n    const { krw_name, loading } = Korean_name(name, coin);\n    \n    // 원화 마켓의 영어이름, 한국이름인 krw_name 과 코인의 가격 및 정보를 갖고있는 coin을 market 기준으로 병합.\n    const { coin_state } = Arrchange(krw_name, coin);\n\n    // console.log(coin_state);\n    // if(krw_name) {\n    //     console.log(krw_name);\n    // } else {\n    //     console.log(\"happy\");\n    // }\n\n    return (\n        <div className=\"App\">\n            <h1>코인이 또...</h1>\n            {/* {loading1 && <span>loading1 your cat</span>}\n            {!loading1 && error1 && <span>{error1}</span>}\n            {!loading1 && name && <li>{name.map((e) => e.market)}</li>} */}\n            {/* <h1>{coin.map((e) => e.change)}</h1> */}\n            {/* {!loading2 && coin && coin.map((e) => <li>{e.market}{e.trade_price}</li>)} */}\n            {!coin_state ? \n            (<div className=\"Loading_div\">Loding</div>) : \n            (<div>\n                <Coin_Chart coin_state={coin_state} />\n                {/* {coin_state.map(e => (\n                    \n                ))} */}\n            </div>\n            )}\n        </div>\n    );\n}\n\nexport default Main;\n","import { useEffect, useState } from 'react';\nimport './App.css';\n// import axios from 'axios';\nimport Main from './route/Main';\nimport { HashRouter, Route } from \"react-router-dom\"\n\n\nconst App = () => {\n  return (\n    <HashRouter>\n      <Route path=\"/\" exact={true} component={Main} />\n      {/* <Route path=\"/:market\" component={Coin_Info} /> */}\n    </HashRouter>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}